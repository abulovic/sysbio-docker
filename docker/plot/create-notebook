#!/usr/bin/env python

import os
import io
import nbformat.v4 as nbv4
from argparse import ArgumentParser


_imports = '''import os, sys

from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot
from plotly.graph_objs import Scatter, Figure, Layout

from sysbio import run_simulation, plot_timecourse'''

_setup = '''init_notebook_mode(connected=True)'''

_ddir = 'data_dir = "."'

_simulate = 'plots = run_simulation("%(mfile)s")'

_plot = '''for plot in plots:
    plot_timecourse(plot)'''

def get_parser():
    parser = ArgumentParser()
    parser.add_argument("model", help="Path to model file")
    return parser


if __name__ == '__main__':

    parser = get_parser()
    args = parser.parse_args()
    model = args.model
    mname = model.split('/')[-1].split('.')[0]

    notebook_name = '%s-plots' % mname

    ddir = '.'
    figures = {}
    for fname in filter(lambda fname: fname.endswith('.txt'), os.listdir(ddir)):
        title = fname[:-4]
        timecourses = {}
        full_fname = '%s/%s' % (ddir, fname)
        with open(full_fname) as fin:
            for line in fin:
                data = line.strip().split(';')
                timecourses[data[0]] = [float(val) for val in data[1:]]
            figures[title] = timecourses

    notebook = nbv4.new_notebook()
    notebook
    notebook['cells'].append(nbv4.new_code_cell(_imports))
    notebook['cells'].append(nbv4.new_code_cell(_setup))
    notebook['cells'].append(nbv4.new_code_cell(_ddir))
    notebook['cells'].append(nbv4.new_code_cell(_simulate % {'mfile': model}))
    notebook['cells'].append(nbv4.new_code_cell(_plot))

    for fname in figures:
        notebook['cells'].append(nbv4.new_code_cell(_plot % {'title': fname}))


    with io.open('/data/%(name)s.ipynb' % {'name': notebook_name}, 'w', encoding='utf-8') as f:
        f.write(nbv4.writes(notebook))

    print '/data/%(name)s.ipynb' % {'name': notebook_name}
