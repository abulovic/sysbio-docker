#!/usr/bin/env python
import os
import subprocess
from argparse import ArgumentParser

_help = '''Script which envokes docker to simulate mathematical models using libroadrunner.
(If configuration file is not provided, the script will try to find the [MODEL NAME.cfg
file in the directory where the model is stored.)
'''

def get_parser():
	parser = ArgumentParser()
	parser.add_argument("MODEL", help="SBML xml file containing the model")
	parser.add_argument("ODIR", help="Output directory where simulation results will be saved")
	return parser


def main():
	parser = get_parser()
	args = parser.parse_args()

	model_dirs = args.MODEL.split(os.path.sep)
	model_arg = './models/%s' % model_dirs[-1]
	model_fname = '.'.join(model_dirs[-1].split('.')[:-1])
	models_dir = os.path.sep.join(model_dirs[:-1])
	models_dir = os.path.abspath(models_dir)

	cfg_arg = ''
	cfg_fname = '%s.cfg' % model_fname
	if os.path.isfile(cfg_fname):
		cfg_arg = '--cfg ./models/%s' % cfg_fname

	odir_arg = '--odir ./sim-output'

	docker_cmd = 'docker run -ti -v %(host_models)s:/home/sysbio/models -v %(host_odir)s:/home/sysbio/sim-output abulovic/sysbio-docker' % {
				 	'host_models': models_dir,
				 	'host_odir': os.path.abspath(args.ODIR),
				 }

	exec_cmd = '%(docker_cmd)s ./simulator %(model_arg)s %(cfg_arg)s %(odir_arg)s' % {
		'docker_cmd': docker_cmd,
		'model_arg': model_arg,
		'cfg_arg': cfg_arg,
		'odir_arg': odir_arg
	}

	subprocess.call(exec_cmd, shell=True)

if __name__ == '__main__':
	main()
